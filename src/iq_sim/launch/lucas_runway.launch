<?xml version="1.0"?>
<launch>

    <!-- Include the empty world launch file -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find iq_sim)/worlds/forest_trees_plot.world"/>
        <!-- <arg name="world_name" value="$(find iq_sim)/worlds/runway.world"/> -->
        <!-- <arg name="world_name" value="$(find hector_gazebo_worlds)/worlds/willow_garage.world"/> -->
    </include>

    <!-- Load the robot description parameter -->
    <param name="robot_description" command="xacro '$(find iq_sim)/urdf/final_iris.urdf.xacro' "/> 
    <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find iq_sim)/urdf/final_iris.urdf.xacro'" />-->

    <!-- Spawn the robot in Gazebo -->
    <node name="spawn_iris" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model final_iris -x 0 -y 0 -z 0.2" />

    <!-- Static transform publisher to connect world to the map -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0 0 0 1.5708 0 0 map world"/> -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0 0 0 0 0 0 map world"/> -->

    <!-- RViz configuration -->
    <!-- <arg name="rviz_config_file" default="$(find iq_sim)/config/iris_config.rviz"/> -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_config_file)"/> -->

    <!-- <node pkg="iq_sim" type="base_footprint_broadcaster.py" name="base_footprint_broadcaster" output="screen"/>-->
    <!-- <node pkg="iq_sim" type="true_pos_broadcaster.py" name="true_pos_broadcaster" output="screen"/> -->

    <!-- <node pkg="iq_sim" type="depth_to_laser_raw.py" name="depth_to_laser_raw" output="screen"/> -->
    <!-- <node pkg="iq_sim" type="repub_scan.py" name="repub_scan" output="screen"/> -->
    <!-- <node pkg="iq_sim" type="repub_odom.py" name="repub_odom" output="screen"/> -->

    <!-- Other necessary nodes -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>

    <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui"/>

    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="10.0"/> 
    </node> -->
  
  
    <!-- <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui">
        <param name="rate" type="double" value="10.0"/> 
    </node> -->

    
</launch>
